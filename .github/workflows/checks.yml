name: Run format, Build Sphinx Documentation, tests

on:
  [pull_request]

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r quality.txt

    - name: Code Format Check
      run: |
        ruff check .

  version-check:
    runs-on: ubuntu-latest
    if: github.base_ref == 'main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check version consistency
      run: |
        # Get version from pyproject.toml
        PYPROJECT_VERSION=$(grep -oP 'version\s*=\s*"\K[^"]+' pyproject.toml)
        # Get version from __init__.py
        INIT_VERSION=$(grep -oP '__version__\s*=\s*["\x27]\K[^"\x27]+' mchplnet/__init__.py)
        
        if [ "$PYPROJECT_VERSION" != "$INIT_VERSION" ]; then
          echo "❌ Version mismatch between pyproject.toml ($PYPROJECT_VERSION) and __init__.py ($INIT_VERSION)"
          echo "Run 'python scripts/update_version.py' to synchronize versions"
          exit 1
        fi
        echo "✅ Version consistency verified: $PYPROJECT_VERSION"

    - name: Check version has been updated
      if: github.base_ref == 'main'
      run: |
        # Get PR version
        PR_VERSION=$(grep -oP 'version\s*=\s*"\K[^"]+' pyproject.toml)
        
        # Get main branch version
        git fetch origin main:main
        MAIN_VERSION=$(git show main:pyproject.toml | grep -oP 'version\s*=\s*"\K[^"]+')
        
        if [ "$PR_VERSION" == "$MAIN_VERSION" ]; then
          echo "❌ ERROR: Version in PR ($PR_VERSION) is the same as in main branch ($MAIN_VERSION)"
          echo "Please update the version in pyproject.toml"
          exit 1
        fi
        echo "✅ Version check passed: $PR_VERSION (PR) vs $MAIN_VERSION (main)"

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r quality.txt
        pip install -e .

    - name: Run tests
      run: |
        pytest 

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r quality.txt
          pip install -e .

      - name: Build documentation
        run: |
          sphinx-build -M html doc build --keep-going 


